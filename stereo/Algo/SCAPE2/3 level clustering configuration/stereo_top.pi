<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <key attr.name="delay" attr.type="string" for="edge"/>
    <graph edgedefault="directed">
        <data key="name">stereo_top</data>
        <node expr="height*width" id="size" kind="param"/>
        <node expr="1" id="overlap" kind="param"/>
        <node expr="1" id="one_" kind="param"/>
        <node expr="60" id="maxDisparity" kind="param"/>
        <node expr="380" id="height" kind="param"/>
        <node expr="height/nbSlice+2*overlap" id="sliceHeight" kind="param"/>
        <node expr="434" id="width" kind="param"/>
        <node expr="20" id="nbSlice" kind="param"/>
        <node expr="5" id="nbIterations" kind="param"/>
        <node expr="4" id="scale" kind="param"/>
        <node expr="0" id="minDisparity" kind="param"/>
        <node expr="0" id="zero" kind="param"/>
        <node expr="12" id="truncValue" kind="param"/>
        <node expr="1" id="one" kind="param"/>
        <node id="top" kind="actor">
            <data key="graph_desc">org.preesm.simsdp/stereo/Code/include/scape.h</data>
            <loop name="top">
                <param direction="IN" isConfig="true" name="zero" type="int"/>
                <param direction="IN" isConfig="true"
                    name="truncValue" type="int"/>
                <param direction="IN" isConfig="true"
                    name="scale" type="int"/>
                <param direction="IN" isConfig="true" name="one_" type="int"/>
                <param direction="IN" isConfig="true" name="one" type="int"/>
                <param direction="IN" isConfig="true"
                    name="nbIterations" type="int"/>
                <param direction="IN" isConfig="true"
                    name="minDisparity" type="int"/>
                <param direction="IN" isConfig="true"
                    name="maxDisparity" type="int"/>
                <param direction="IN" isConfig="true"
                    name="width" type="int"/>
                <param direction="IN" isConfig="true" name="size" type="int"/>
                <param direction="IN" isConfig="true"
                    name="height" type="int"/>
                <param direction="IN" isConfig="true"
                    name="nbSlice" type="int"/>
                <param direction="IN" isConfig="true"
                    name="overlap" type="int"/>
                <param direction="IN" isConfig="true"
                    name="sliceHeight" type="int"/>
                <param direction="IN" isConfig="false"
                    name="feedBestCost" type="float"/>
                <param direction="IN" isConfig="false"
                    name="feedResult" type="uchar"/>
                <param direction="IN" isConfig="false"
                    name="feed" type="uchar"/>
                <param direction="OUT" isConfig="false"
                    name="backBestCost" type="float"/>
                <param direction="OUT" isConfig="false"
                    name="backResult" type="uchar"/>
                <param direction="OUT" isConfig="false"
                    name="back" type="uchar"/>
            </loop>
            <init name="init"/>
            <port kind="cfg_input" name="zero"/>
            <port kind="cfg_input" name="truncValue"/>
            <port kind="cfg_input" name="scale"/>
            <port kind="cfg_input" name="one_"/>
            <port kind="cfg_input" name="nbIterations"/>
            <port kind="cfg_input" name="minDisparity"/>
            <port kind="cfg_input" name="maxDisparity"/>
            <port kind="cfg_input" name="width"/>
            <port kind="cfg_input" name="size"/>
            <port kind="cfg_input" name="height"/>
            <port kind="cfg_input" name="nbSlice"/>
            <port kind="cfg_input" name="overlap"/>
            <port kind="cfg_input" name="sliceHeight"/>
            <port kind="cfg_input" name="one"/>
            <port annotation="NONE" expr="height*width+1"
                kind="input" name="feedBestCost"/>
            <port annotation="NONE" expr="size" kind="input" name="feedResult"/>
            <port annotation="NONE" expr="1" kind="input" name="feed"/>
            <port annotation="NONE" expr="height*width+1"
                kind="output" name="backBestCost"/>
            <port annotation="NONE" expr="size" kind="output" name="backResult"/>
            <port annotation="NONE" expr="1" kind="output" name="back"/>
        </node>
        <node expr="height*width+1" getter=""
            id="top_backBestCost_out__top_backBestCost_in"
            kind="delay" level="permanent" setter="">
            <port annotation="NONE" expr="height*width+1"
                kind="input" name="set"/>
            <port annotation="NONE" expr="height*width+1"
                kind="output" name="get"/>
        </node>
        <node expr="size" getter=""
            id="top_backResult__top_feedResult" kind="delay"
            level="permanent" setter="">
            <port annotation="NONE" expr="size" kind="input" name="set"/>
            <port annotation="NONE" expr="size" kind="output" name="get"/>
        </node>
        <node expr="1" getter="" id="top_back__top_feed"
            kind="delay" level="permanent" setter="">
            <port annotation="NONE" expr="1" kind="input" name="set"/>
            <port annotation="NONE" expr="1" kind="output" name="get"/>
        </node>
        <edge expr="height*width+1" kind="fifo" source="top"
            sourceport="backBestCost" target="top"
            targetport="feedBestCost" type="float">
            <data key="delay">top_backBestCost_out__top_backBestCost_in</data>
        </edge>
        <edge expr="size" kind="fifo" source="top"
            sourceport="backResult" target="top"
            targetport="feedResult" type="uchar">
            <data key="delay">top_backResult__top_feedResult</data>
        </edge>
        <edge expr="1" kind="fifo" source="top" sourceport="back"
            target="top" targetport="feed" type="uchar">
            <data key="delay">top_back__top_feed</data>
        </edge>
        <edge kind="dependency" source="height" target="size"/>
        <edge kind="dependency" source="width" target="size"/>
        <edge kind="dependency" source="overlap" target="sliceHeight"/>
        <edge kind="dependency" source="nbSlice" target="sliceHeight"/>
        <edge kind="dependency" source="height" target="sliceHeight"/>
        <edge kind="dependency" source="zero" target="top" targetport="zero"/>
        <edge kind="dependency" source="truncValue" target="top" targetport="truncValue"/>
        <edge kind="dependency" source="scale" target="top" targetport="scale"/>
        <edge kind="dependency" source="one_" target="top" targetport="one_"/>
        <edge kind="dependency" source="nbIterations"
            target="top" targetport="nbIterations"/>
        <edge kind="dependency" source="minDisparity"
            target="top" targetport="minDisparity"/>
        <edge kind="dependency" source="maxDisparity"
            target="top" targetport="maxDisparity"/>
        <edge kind="dependency" source="width" target="top" targetport="width"/>
        <edge kind="dependency" source="size" target="top" targetport="size"/>
        <edge kind="dependency" source="height" target="top" targetport="height"/>
        <edge kind="dependency" source="nbSlice" target="top" targetport="nbSlice"/>
        <edge kind="dependency" source="overlap" target="top" targetport="overlap"/>
        <edge kind="dependency" source="sliceHeight" target="top" targetport="sliceHeight"/>
        <edge kind="dependency" source="one" target="top" targetport="one"/>
        <edge kind="dependency" source="width" target="top_backBestCost_out__top_backBestCost_in"/>
        <edge kind="dependency" source="height" target="top_backBestCost_out__top_backBestCost_in"/>
        <edge kind="dependency" source="size" target="top_backResult__top_feedResult"/>
    </graph>
</graphml>
